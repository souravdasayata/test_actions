name: GitHub Actions
run-name: ${{ github.actor }} is testing out GitHub Actions
on: 
  push:
    branches:
      deploy
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-awesome-website:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
  
    - name: Save cache to disk
      if: always()
      run: |
          if [ -d /tmp/.buildx-cache-new ]; then
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi
  
    - name: Verify image creation
      run: |
        if docker images | grep -q "${{ secrets.DOCKER_USERNAME }}/my-awesome-website"; then
          echo "Docker image created and tagged successfully."
        else
          echo "Docker image not found!"
          exit 1
        fi

  